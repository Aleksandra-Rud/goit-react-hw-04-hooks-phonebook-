{"version":3,"sources":["Components/ContactForm/Form.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactForm/Form.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","nameId","uuidv4","numberId","preventDefault","_uuidv4","id","htmlFor","className","s","formLbl","type","onChange","pattern","title","required","inputLbl","btnInput","ContactList","contacts","deleteContact","contactLists","map","contactItem","contactName","contactNumber","onClick","btnDelete","Filter","filteredValue","filterInputLabel","filteredInput","placeholder","initialState","App","setContacts","filter","setFilter","useEffect","newContacts","JSON","parse","localStorage","getItem","setItem","stringify","data","some","contact","toLowerCase","includes","alert","target","normalizedFilter","toLocaleLowerCase","trim","onFilteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31115b14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLbl\":\"Form_formLbl__tPF02\",\"inputLbl\":\"Form_inputLbl__2Pduc\",\"btnInput\":\"Form_btnInput__3mWfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLists\":\"ContactList_contactLists__2qu83\",\"contactItem\":\"ContactList_contactItem__27boU\",\"contactName\":\"ContactList_contactName__aoe0B\",\"deleteContactBtn\":\"ContactList_deleteContactBtn__1LpuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filteredInputLabel\":\"Filter_filteredInputLabel__2OMbP\",\"filteredInput\":\"Filter_filteredInput__iiz_3\"};","// import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const _uuidv4 = uuidv4();\r\n    const addNewContact = {\r\n      id: _uuidv4,\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    onSubmit(addNewContact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor={nameId} className={s.formLbl}>\r\n        {\" \"}\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.inputLbl}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label htmlFor={numberId} className={s.formLbl}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={s.inputLbl}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" value=\"Отправить\" className={s.btnInput}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.string.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.contactLists}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <p className={s.contactName}>\r\n            {name}: <span className={s.contactNumber}>{number}</span>\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n            className={s.btnDelete}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, filteredValue }) => {\r\n  return (\r\n    <>\r\n      <label className={s.filterInputLabel}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        className={s.filteredInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={filteredValue}\r\n        placeholder=\"Contact\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  filteredValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport \"./App.css\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const newContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    setContacts(newContacts ? newContacts : initialState);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmitForm = (data) => {\n    const _c = contacts.some((contact) =>\n      contact.name.toLowerCase().includes(data.name.toLowerCase())\n    );\n\n    if (_c) {\n      return alert(`${data.name} is already in contacts`);\n    }\n    setContacts([data, ...contacts]);\n  };\n\n  const onDeleteContact = (id) => {\n    setContacts([...contacts.filter((contact) => contact.id !== id)]);\n  };\n\n  const handleFilteredInput = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const onFilteredContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().trim().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <ContactForm onSubmit={handleSubmitForm} />\n        <h2>Contacts</h2>\n        <Filter value={filter} filteredValue={handleFilteredInput} />\n      </div>\n\n      <div>\n        <ContactList\n          title=\"Contacts\"\n          deleteContact={onDeleteContact}\n          contacts={onFilteredContacts()}\n        ></ContactList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}